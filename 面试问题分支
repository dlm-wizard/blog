切记：不要一问一答，善于沟通。不要被动的回答问题，可以将知识延伸，聊到自己擅长的领地
自己的职业规划：认真想想，已3-5年为界	
想想最后问面试官的问题
		
					node面试(难)

一、koa中间件执行机制
	1.使用过的koa2中间件
	2.koa-body原理
		(1)为什么要用koa(express和koa对比)
	3.介绍自己写过的中间件(有没有设计cluster)
	

二、
     	1、koa中response.send、response.rounded、response.json发生了什么事，浏览器为什么能识别到它是一个json结构或是html
     	2、koa-bodyparser怎么来解析request
	 
三、node
     	1、进程和线程的区别(一个node实例就是一个进程，node是单线程，通过事件循环来实现异步)
     	2、node文件查找优先级
	3、npm2和npm3+有什么区别
	4、express框架的设计思想(难)
		(1)express里面登录的session服务怎么样实现分布式服务(难)
	 
	 
	 
	 
	 
	 					HTML+CSS面试	

一、HTML
	1.多个标签生成的dom结构是一个类数组
		(1)类数组和数组的区别
		(2)dom类数组如何转成数组
	2.html语义化的理解
		(1)<b>和<strong>的区别
	3.
	4.

一、css
	1.CSS选择器有哪些
	2.如何实现H5手机端的适配
	3.rem、flex的区别（root em）
	4.em和px的区别

一、css实现
	1.移动端适配1px
	2.flex布局
	3.其他方式设置垂直居中
	4.居中为什么要使用transform（为什么不使用marginLeft/Top）
	5.介绍position属性包括CSS3新增(介绍css3中position:sticky)
	6.动画的了解
		(1)transform动画和直接使用left、top改变位置有什么优缺点
	7.div垂直水平居中（flex、绝对定位）
	8.两个元素块，一左一右，中间相距10像素
	9.上下固定，中间滚动布局如何实现
	10.如何实现高度自适应
	11.其他方式设置垂直居中
	12.其他方式设置垂直居中
	13.其他方式设置垂直居中
	14.其他方式设置垂直居中
	15.其他方式设置垂直居中
	
	
一、js
	1.页面上生成一万个button，并且绑定事件，如何做（JS原生操作DOM）
		(1)页面上有1万个button如何绑定事件
		(2)如何判断是button
		(3)循环绑定时的index是多少，为什么，怎么解决
	2.页面上有一个input，还有一个p标签，改变input后p标签就跟着变化，如何处理
		(1)监听input的哪个事件，在什么时候触发
	3.其他方式设置垂直居中
	4.居中为什么要使用transform（为什么不使用marginLeft/Top）
	5.介绍position属性包括CSS3新增(介绍css3中position:sticky)
	6.动画的了解
		(1)transform动画和直接使用left、top改变位置有什么优缺点
	7.div垂直水平居中（flex、绝对定位）

二、node进程管理工具pm2
     1、介绍pm2
     2、master挂了的话pm2怎么处理
	 
三、node进程管理工具pm2
     1、介绍pm2
     2、master挂了的话pm2怎么处理
	 
	 
	 
	 
	 					js面试
介绍AST（Abstract Syntax Tree）抽象语法树

一、基础知识
     1、== 和 ===的区别，什么情况下用相等==
     2、介绍事件委托(代理)以及优缺点
	 3、两个对象如何比较
	 4、如何判断一个变量是不是数组
	 5、for..in 和 object.keys的区别(**数组方法API**)



二、this关键字
     1、介绍this各种情况
     2、介绍事件委托(代理)以及优缺点
	 3、bind、call、apply的区别
	 4、词法作用域和this的区别
	 5、介绍箭头函数的this


三、es6
     1、介绍暂时性死区
     2、ES6中的map和原生的对象有什么区别
	 3、bind、call、apply的区别
	 4、ES5和ES6有什么区别(新增了哪些东西)
	 	(1)介绍class和ES5的类以及区别
		(2)介绍箭头函数和普通函数的区别
	 5、ES6中let块作用域是怎么实现的
	 
	 
四、setTimeout 和 setInterval的机制
     1、Promise和setTimeout执行先后的区别
     2、setInterval需要注意的点
	 3、定时器为什么是不精确的
	 4、Promise和setTimeout的区别（Event Loop）
	 
五、深拷贝和浅拷贝
     1、loadsh深拷贝实现原理
     2、
	 3、
	 4、

六、闭包和原型链
     1、介绍下原型链（解决的是继承问题吗）
	 	(1)如何继承
		(2)使用原型最大的好处
		(3)添加原生事件不移除为什么会内存泄露
			1)还有哪些地方会内存泄露
	 2、对闭包的看法，为什么要用闭包
	 	(1)闭包的核心是什么
		(2)闭包的缺点，如何实现闭包
	 3、JS的原型
	 	(1)prototype和——proto——区别
		(2)_construct是什么
		(3)new是怎么实现的
	 4、变量作用域链
     5、介绍事件委托(代理)以及优缺点
	 6、bind、call、apply的区别
	 

七、同源与跨域			=>		https://segmentfault.com/a/1190000012469713
	1.介绍下浏览器跨域
		(1)如何解决跨域问题
		(2)jsonp方案需要服务端怎么配合
		(3)Ajax发生跨域要设置什么（前端）
	2.表单可以跨域吗
	3.介绍同源策略
	4.介绍自己写过的中间件(有没有设计cluster)
	3.介绍自己写过的中间件(有没有设计cluster)
	

八、异步回调
     1、promise、async有什么区别
	 	(1)对async、await的理解，内部原理
		(2)使用async会注意哪些东西
		(3)async里面有多个await请求，可以怎么优化（请求是否有依赖）
		(4)介绍下Promise，内部实现
			1)介绍下Promise的用途和性质(Promise有几个状态\Promise.all实现原理)
			2)Promise和Callback有什么区别
			3)Promise构造函数是同步还是异步执行，then呢
			4)a，b两个按钮，点击aba，返回顺序可能是baa，如何保证是aba（Promise.then）
		(5)如何设计Promise.all()
     2、master挂了的话pm2怎么处理
	 3、介绍Promise，异常捕获
	 4、JS异步解决方案的发展历程以及优缺点
	 5、介绍各种异步方案
	 
九、函数节流防抖
     1、搜索请求如何处理（防抖）
     2、master挂了的话pm2怎么处理

四、图片懒加载和预加载(项目)
     1、图片懒加载怎么实现的
     2、讲vue-lazyloader原理，手写伪代码
	 
四、js手写代码
     1、文件断点续传(难)
     2、master挂了的话pm2怎么处理
	 
五、前端事件流
     1、浏览器事件流向
     2、介绍事件委托(代理)以及优缺点
	 
五、js垃圾回收机制
     1、JS里垃圾回收机制是什么，常用的是哪种，怎么处理的
     2、介绍事件委托(代理)以及优缺点
	 3、垃圾回收时栈和堆的区别
	 
	 	 				vue面试	

一、webpack(难)
	1.使用过webpack里面哪些plugin和loader(webpack整个生命周期，loader和plugin有什么区别)
	2.webpack里面的插件是怎么实现的
	3.抽取公共文件是怎么配置的
	4.(1)import { Button } from 'antd'，打包的时候只打包button，分模块加载，是怎么做到的
 	  (2)使用import时，webpack对node_modules里的依赖会做什么
	5.一般怎么组织CSS（Webpack）
	6.webpack如何配sass，需要配哪些loader
	7.配css需要哪些loader
	8.如何配置把js、css、html单独打包成一个文件
	

二、vue基础
     1、介绍虚拟DOM(难)
	 	(1)虚拟DOM主要做了什么、本身是什么（JS对象）
		(2)
		(3)为什么虚拟DOM比真实DOM性能好
     2、双向数据绑定的原理
	 	(1)介绍defineProperty方法，什么时候需要用到
	 3、怎样实现数组绑定
	 4、如何去除url中的#号
	 5、vue的双向数据绑定的原理
	 6、vue的双向数据绑定的原理
	 
三、eventBus vuex
     1、Emit事件怎么发，需要引入什么
     2、master挂了的话pm2怎么处理
	 
三、Vue的SPA
     1、什么是单页项目
     2、介绍单页面应用和多页面应用
	 
	 
	 
	 					http面试	

一、http状态码
	1.介绍下HTTP状态码
		(1)403、301、302、304是什么
	2.http报文的请求会有几个部分
	3.从输入URL到页面加载全过程
		(1)tcp3次握手


一、
	1.常见http请求头
		(1)缓存相关的HTTP请求头
	2.http报文的请求会有几个部分
	3.从输入URL到页面加载全过程
		(1)tcp3次握手
	

二、get与post
     1、搜索请求中文如何请求
     2、master挂了的话pm2怎么处理
	 
三、http1.0 1.1 2.0
     1、介绍http2.0
     2、http1.1时如何复用tcp连接
	 
	 
三、https
     1、介绍https
     2、https怎么建立安全通道
	 3、http和https的区别
	 4、https的加密过程
	 	(1)介绍SSL和TLS
	 
三、web缓存
     1、http缓存控制
     2、http1.1时如何复用tcp连接
	 
	 
	 	 			服务器存储与传输方式	

一、存储方式
	1.cookie放哪里，cookie能做的事情和存在的价值(为了解决什么问题)
	2.cookie和token都存放在header里面，为什么只劫持前者
	3.cookie和session有哪些方面的区别
	

二、cookie，sessionStorage，localStorage是存放在客户端，session对象数据是存放在服务器上
     1、localStorage和cookie有什么区别
     2、master挂了的话pm2怎么处理
	 3、介绍localstorage的API
	 
三、node进程管理工具pm2
     1、介绍pm2
     2、master挂了的话pm2怎么处理
	 
	 
	 
	 
	 				性能优化	
一、
	1.整个前端性能提升大致分几类
	2.cookie和token都存放在header里面，为什么只劫持前者
	3.cookie和session有哪些方面的区别
	

二、
     1、前端性能优化（1js css；2 图片；3 缓存预加载； 4 SSR； 5 多域名加载；6 负载均衡）
     2、master挂了的话pm2怎么处理
	 
三、node进程管理工具pm2
     1、介绍pm2
     2、master挂了的话pm2怎么处理
	 
	 
	 					设计模式	

一、观察者模式与发布-订阅者
	1.介绍观察者模式
		(1)观察者模式里面使用的数据结构(不具备顺序 ，是一个list)
	2.介绍中介者模式
	3.观察者和订阅-发布的区别，各自用在哪里
	

二、单例、工厂、观察者项目中实际场景
     1、介绍pm2
     2、master挂了的话pm2怎么处理
	 
	 
	 					node面试	

一、koa中间件执行机制
	1.使用过的koa2中间件
	2.koa-body原理
	3.介绍自己写过的中间件(有没有设计cluster)
	

二、node进程管理工具pm2
     1、介绍pm2
     2、master挂了的话pm2怎么处理
	 
三、node进程管理工具pm2
     1、介绍pm2
     2、master挂了的话pm2怎么处理
	 
	 
	 
	 					数据结构	

一、顺序表、链表
	1.如何判断链表是否有环
	2.koa-body原理
	3.介绍自己写过的中间件(有没有设计cluster)
	

二、树
     1、介绍二叉搜索树的特点
     2、master挂了的话pm2怎么处理

二、基础算法
     1、排序所有算法都要掌握到滚瓜熟练
	 2、介绍下DFS深度优先

三、
     1、sum(2, 3)实现sum(2)(3)的效果
     2、取数组的最大值（ES5、ES6
	 3、手写数组去重函数
	 4、手写数组扁平化函数
	 5、[1, 2, 3, 4, 5]变成[1, 2, 3, a, b, 5]
	 6、[1, 2, 3, 4, 5]变成[1, 2, 3, a, b, 5]
	 7、[1, 2, 3, 4, 5]变成[1, 2, 3, a, b, 5]
	 8、[1, 2, 3, 4, 5]变成[1, 2, 3, a, b, 5]
	 9、[1, 2, 3, 4, 5]变成[1, 2, 3, a, b, 5]


Q:
1、介绍service worker?
2、栈和堆的区别
	(1)栈和堆具体怎么存储
3、如何对相对路径引用进行优化






















